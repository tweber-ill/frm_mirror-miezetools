#!./hermelin
#
# TAS calculations
# Author: TW
#

__init__()
{
	import("apps/neutrons.scr");
	import("apps/hkl.scr");

	global mono_order = 2.0;
	global ana_order = 2.0;

	global mono_d = 6.79;
	global ana_d = 6.79;
}

main()
{
	lam_i = real(input("lam_i [A] = "));
	k_i = lam2k(lam_i);
	E_i = k2E(k_i);
	mono_tt = angle_mono_tt(mono_d/mono_order, k_i);

	Q = real(input("Q [1/A] = "));
	dE = real(input("dE [meV] = "));

	E_f = E_i - dE;
	k_f = E2k(E_f);	

	tt = -angle_sample_tt(k_i, k_f, Q);
	ana_tt = angle_mono_tt(ana_d/ana_order, k_f);


	print("\n" + "-"*80);
	print("k_i = " + k_i + " 1/A");
	print("E_i = " + E_i + " meV");

	print("k_f = " + k_f + " 1/A");
	print("E_f = " + E_f + " meV");

	print("2theta_mono = " + mono_tt/pi*180. + " deg");
	print("2theta_ana = " + ana_tt/pi*180. + " deg");
	print("2theta_sample = " + tt/pi*180. + " deg");
	print("-"*80);
}
