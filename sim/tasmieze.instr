/*
 * new TAS-MIEZE instrument
 * @author tweber
 * @date 25-nov-13
 */

DEFINE INSTRUMENT TasMieze
	(
		// source
		double dLam = 5.0, 
		double dDeltaLam = 0.1
	)


DECLARE
%{
	int bAbsorbNonScattered = 1;

	// monochromator
	bool bMonoIdeal = 0;
	double dMonoD = 6.79;
	double dMonoScatterSense = 1.;
	double dDistSrcMono = 1.;
	double dMonoTheta = 63.4, dMonoTwoTheta = 126.8;
	double dMonoWidth = 0.2, dMonoHeight = 0.2, dMonoDepth = 0.005;

	// sample
	double dDistMonoSample = 1.;
	double dSampleTheta=0., dSampleTwoTheta = 0.;
	double dSampleScatterSense = 1.;

	// analyser
	bool bAnaIdeal = 0;
	double dAnaD = 6.79;
	double dAnaScatterSense = -1.;
	double dDistSampleAna = 1.;
	double dAnaTheta=0., dAnaTwoTheta = 0.;
	double dAnaWidth = 0.2, dAnaHeight = 0.2, dAnaDepth = 0.005;

	// detector
	double dDistAnaDet = 1.;
	double dDetWidth = 0.4, dDetHeight = 0.4;
%}



INITIALIZE
%{
	double dOrder = 2.;
	dMonoTheta = dMonoScatterSense*asin(dOrder*dLam / (2.*dMonoD)) / M_PI * 180.;
	dMonoTwoTheta = dMonoTheta * 2.;


	dAnaTheta = dAnaScatterSense*asin(dOrder*dLam / (2.*dAnaD)) / M_PI * 180.;
	dAnaTwoTheta = dAnaTheta * 2.;


	printf("Monochromator: theta=%f, 2theta=%f\n", dMonoTheta, dMonoTwoTheta);
	printf("Analyser: theta=%f, 2theta=%f\n", dAnaTheta, dAnaTwoTheta);
%}






TRACE

COMPONENT Origin = Progress_bar()
	 	AT (0,0,0) ABSOLUTE



//----------------------------------------------------------------------------------------------------
// source

COMPONENT Source = Source_simple(
	yheight = 0.01, xwidth = 0.01, focus_xw = dMonoWidth*0.5, focus_yh = dMonoHeight*0.5,
	lambda0 = dLam, dlambda = dDeltaLam, gauss = 1, dist = dDistSrcMono)
		AT (0, 0, 0) RELATIVE Origin

//----------------------------------------------------------------------------------------------------




//----------------------------------------------------------------------------------------------------
// monochromator

COMPONENT MonoAxisBegin = Arm()
	AT (0, 0, dDistSrcMono) RELATIVE Source

COMPONENT Mono_flat = Monochromator_flat(
	zwidth = dMonoWidth, yheight = dMonoHeight, mosaich = 10, mosaicv = 10,
	r0 = 1, DM = dMonoD)
		WHEN(bMonoIdeal == 1)
  		AT (0, 0, 0) RELATIVE MonoAxisBegin
	  	ROTATED (0, dMonoTheta, 0) RELATIVE MonoAxisBegin
		EXTEND
		%{
			if(bAbsorbNonScattered && !SCATTERED)
				ABSORB;
		%}

COMPONENT Mono_crystal = Single_crystal(
	reflections = "C_graphite.lau", 
	xwidth = dMonoWidth, yheight = dMonoHeight, zdepth = dMonoDepth, 
	delta_d_d = 1e-4, mosaic = 10, recip_cell = 0, barns = 0, 
	ax = 2.464, ay = 0, az = 0, 
	bx = 0, by = 2.464, bz = 0, 
	cx = 0, cy = 0, cz = dMonoD,
	sigma_abs = 0.0035, sigma_inc = 0.001, 
	order = 0, RX = 0, RY = 0, RZ = 0)
		WHEN(bMonoIdeal == 0)
		AT (0, 0, 0) RELATIVE MonoAxisBegin
		ROTATED (0, 90+dMonoTheta, 0) RELATIVE MonoAxisBegin
		EXTEND
		%{
			if(bAbsorbNonScattered && !SCATTERED)
				ABSORB;
		%}


COMPONENT MonoAxisEnd = Arm()
	AT (0, 0, 0) RELATIVE MonoAxisBegin
	ROTATED (0, dMonoTwoTheta, 0) RELATIVE MonoAxisBegin



//----------------------------------------------------------------------------------------------------





//----------------------------------------------------------------------------------------------------
// sample

COMPONENT SampleAxisBegin = Arm()
	AT (0, 0, dDistMonoSample) RELATIVE MonoAxisEnd



COMPONENT SampleAxisEnd = Arm()
	AT (0, 0, 0) RELATIVE SampleAxisBegin
	ROTATED (0, dSampleTwoTheta, 0) RELATIVE SampleAxisBegin

//----------------------------------------------------------------------------------------------------





//----------------------------------------------------------------------------------------------------
// analyser

COMPONENT AnaAxisBegin = Arm()
	AT (0, 0, dDistSampleAna) RELATIVE SampleAxisEnd

COMPONENT Ana_flat = Monochromator_flat(
	zwidth = dAnaWidth, yheight = dAnaHeight, mosaich = 10, mosaicv = 10,
	r0 = 1, DM = dAnaD)
		WHEN(bAnaIdeal == 1)
  		AT (0, 0, 0) RELATIVE AnaAxisBegin
	  	ROTATED (0, dAnaTheta, 0) RELATIVE AnaAxisBegin
		EXTEND
		%{
			if(bAbsorbNonScattered && !SCATTERED)
				ABSORB;
		%}

COMPONENT Ana_crystal = Single_crystal(
	reflections = "C_graphite.lau", 
	xwidth = dAnaWidth, yheight = dAnaHeight, zdepth = dAnaDepth, 
	delta_d_d = 1e-4, mosaic = 10, recip_cell = 0, barns = 0, 
	ax = 2.464, ay = 0, az = 0, 
	bx = 0, by = 2.464, bz = 0, 
	cx = 0, cy = 0, cz = dAnaD,
	sigma_abs = 0.0035, sigma_inc = 0.001, 
	order = 0, RX = 0, RY = 0, RZ = 0)
		WHEN(bAnaIdeal == 0)
		AT (0, 0, 0) RELATIVE AnaAxisBegin
		ROTATED (0, 90+dAnaTheta, 0) RELATIVE AnaAxisBegin
		EXTEND
		%{
			if(bAbsorbNonScattered && !SCATTERED)
				ABSORB;
		%}


COMPONENT AnaAxisEnd = Arm()
	AT (0, 0, 0) RELATIVE AnaAxisBegin
	ROTATED (0, dAnaTwoTheta, 0) RELATIVE AnaAxisBegin

//----------------------------------------------------------------------------------------------------




//----------------------------------------------------------------------------------------------------
// detector

COMPONENT DetAxis = Arm()
	AT (0, 0, dDistAnaDet) RELATIVE AnaAxisEnd


/*
COMPONENT lam = L_monitor(
	nL = 64, filename = "lam", xwidth = dDetWidth, yheight = dDetHeight,
	Lmin = 0, Lmax = 10, restore_neutron = 1)
		AT (0, 0, 0) RELATIVE DetAxis
*/

COMPONENT psd = PSD_monitor(
	nx = 128, ny = 128, restore_neutron = 1, filename = "psd",
	xwidth = dDetWidth, yheight = dDetHeight)
		AT (0, 0, 0) RELATIVE DetAxis

//----------------------------------------------------------------------------------------------------


FINALLY
%{
%}


END



